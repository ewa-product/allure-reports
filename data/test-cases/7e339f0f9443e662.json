{"uid":"7e339f0f9443e662","name":"test_register_partner_positive[authorize_partner-200]","fullName":"tests.register.test_02_register_partner#test_register_partner_positive","historyId":"c4ba481f8413bdb8903973e2bedd4fdd","time":{"start":1744589648575,"stop":1744589649406,"duration":831},"description":"Тест: позитивные тесты для регистрации партнера вручную","descriptionHtml":"<p>Тест: позитивные тесты для регистрации партнера вручную</p>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200\n  +400\n  -200","statusTrace":"api_client = <api_tests.utils.api_client.APIClient object at 0x7f5d065e1a10>\nauthorize_func = <function authorize_partner at 0x7f5d06616480>\nexpected_status = 200\n\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"authorize_func, expected_status\", [\n        (authorize_partner, 200),\n      #  (authorize_client, 403),\n       # (authorize_admin, 403)\n    ])\n    def test_register_partner_positive(api_client, authorize_func, expected_status):\n        \"\"\"Тест: позитивные тесты для регистрации партнера вручную\"\"\"\n        authorize_func(api_client)\n        response = api_client.post(\"/register/partner\", json=TEST_DATA)\n>       assert api_client.last_response.status_code == expected_status\nE       assert 400 == 200\nE         +400\nE         -200\n\napi_tests/tests/register/test_02_register_partner.py:20: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1744589648574,"stop":1744589648574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"api_client::0","time":{"start":1744589651277,"stop":1744589651277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.register"},{"name":"suite","value":"test_02_register_partner"},{"name":"host","value":"fv-az1477-977"},{"name":"thread","value":"1852-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.register.test_02_register_partner"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"authorize_func","value":"<function authorize_partner at 0x7f5d06616480>"},{"name":"expected_status","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"7e339f0f9443e662.json","parameterValues":["<function authorize_partner at 0x7f5d06616480>","200"]}