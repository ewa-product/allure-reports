{"uid":"607b1d05cbe41bbd","name":"test_save_delivery_address_positive[authorize_client-payload0]","fullName":"tests.delivery.test_01_save_delivery_address#test_save_delivery_address_positive","historyId":"1b6d9e95589b9aee3e8a33348aef4ddc","time":{"start":1744416718067,"stop":1744416718755,"duration":688},"description":"Позитивные тесты на сохранение адреса доставки","descriptionHtml":"<p>Позитивные тесты на сохранение адреса доставки</p>\n","status":"skipped","statusMessage":"XFAIL https://ru.yougile.com/team/01c2a92f1328/#IT-628\n\nAssertionError: Поле delivery_price отсутствует в ответе","statusTrace":"api_client = <api_tests.utils.api_client.APIClient object at 0x7f48c70a4f50>\nauthorize_func = <function authorize_client at 0x7f48c717e340>\npayload = {'city_id': 23, 'city_name': 'Москва', 'comment': 'Позвоните за 372681 минут до доставки', 'country_id': 1, ...}\n\n    @pytest.mark.xfail(reason = \"https://ru.yougile.com/team/01c2a92f1328/#IT-628\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\n        \"payload\",\n        [\n            create_address_payload(),  # Полный валидный запрос\n            create_address_payload(comment=\"\"),  # Без комментария\n            create_address_payload(iin=None),  # Без ИИН\n            create_address_payload(region_name=\"\"),  # Без region_name\n            create_address_payload(city_name=\"\"),  # Без city_name\n            create_address_payload(email=None),  # Без email\n        ]\n    )\n    @pytest.mark.parametrize(\n        \"authorize_func\",\n        [authorize_client, authorize_partner, authorize_admin]\n    )\n    def test_save_delivery_address_positive(api_client, authorize_func, payload):\n        \"\"\"Позитивные тесты на сохранение адреса доставки\"\"\"\n        authorize_func(api_client)\n        payload = create_address_payload()\n        response = api_client.post(\"/delivery/user_address\", json=payload)\n        assert_response_status_OK(api_client.last_response.status_code, 200)\n        assert response[\"id\"] is not None\n        address_id = response[\"id\"]\n>       assert_delivery_address_fields(response)\n\napi_tests/tests/delivery/test_01_save_delivery_address.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_tests/utils/asserts.py:170: in assert_delivery_address_fields\n    assert_presence_of_all_fields(response, expected_fields, optional_fields)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'Iin': '990101300123', 'city_id': 23, 'city_name': 'Москва', 'comment': 'Позвоните за 372681 минут до доставки', ...}\nexpected_fields = ['country_id', 'delivery', 'email', 'id', 'name', 'phone', ...]\noptional_fields = ['region_id', 'region_name', 'city_name', 'city_id', 'comment', 'Iin']\n\n    def assert_presence_of_all_fields(response, expected_fields, optional_fields=[]):\n        if isinstance(response, str):  # Если response строка, парсим JSON\n            try:\n                response = json.loads(response)\n            except json.JSONDecodeError:\n                assert False, f\"Ответ не является валидным JSON: {response}\"\n        assert isinstance(response, dict), f\"Ожидался словарь, но получен {type(response)}: {response}\"\n        for field in expected_fields:\n>           assert field in response, f\"Поле {field} отсутствует в ответе\"\nE           AssertionError: Поле delivery_price отсутствует в ответе\n\napi_tests/utils/asserts.py:13: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1744416718067,"stop":1744416718067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"api_client::0","time":{"start":1744416732333,"stop":1744416732333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"@pytest.mark.xfail(reason='https://ru.yougile.com/team/01c2a92f1328/#IT-628')"},{"name":"parentSuite","value":"tests.delivery"},{"name":"suite","value":"test_01_save_delivery_address"},{"name":"host","value":"fv-az1937-160"},{"name":"thread","value":"2010-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delivery.test_01_save_delivery_address"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"authorize_func","value":"<function authorize_client at 0x7f48c717e340>"},{"name":"payload","value":"{'id': 508375, 'country_id': 1, 'region_id': 77, 'region_name': 'Москва Город', 'city_name': 'Москва', 'city_id': 23, 'delivery': {'cdek': {'is_courier': True, 'address': {'street': 'Тестовая улица 324211', 'house': '10', 'apartment': '5'}, 'country_id_to': 1}}, 'name': 'Иван Иванов', 'phone': '+77001234567', 'email': 'test@example.com', 'iin': '990101300123', 'comment': 'Позвоните за 47672 минут до доставки'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='https://ru.yougile.com/team/01c2a92f1328/#IT-628')","smoke"]},"source":"607b1d05cbe41bbd.json","parameterValues":["<function authorize_client at 0x7f48c717e340>","{'id': 508375, 'country_id': 1, 'region_id': 77, 'region_name': 'Москва Город', 'city_name': 'Москва', 'city_id': 23, 'delivery': {'cdek': {'is_courier': True, 'address': {'street': 'Тестовая улица 324211', 'house': '10', 'apartment': '5'}, 'country_id_to': 1}}, 'name': 'Иван Иванов', 'phone': '+77001234567', 'email': 'test@example.com', 'iin': '990101300123', 'comment': 'Позвоните за 47672 минут до доставки'}"]}