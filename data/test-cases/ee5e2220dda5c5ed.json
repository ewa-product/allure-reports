{"uid":"ee5e2220dda5c5ed","name":"test_create_two_addresses_with_different_delivery","fullName":"tests.delivery.test_01_save_delivery_address#test_create_two_addresses_with_different_delivery","historyId":"d087cf096bb8182c27a626878c304733","time":{"start":1744368748982,"stop":1744368749545,"duration":563},"description":"Тест на создание двух адресов с одинаковыми данными, кроме street в delivery","descriptionHtml":"<p>Тест на создание двух адресов с одинаковыми данными, кроме street в delivery</p>\n","status":"skipped","statusMessage":"XFAIL https://ru.yougile.com/team/01c2a92f1328/#IT-628\n\nAssertionError: Поле delivery_price отсутствует в ответе","statusTrace":"api_client = <api_tests.utils.api_client.APIClient object at 0x7f87ccdf16d0>\n\n    @pytest.mark.xfail(reason = \"https://ru.yougile.com/team/01c2a92f1328/#IT-628\")\n    @pytest.mark.smoke\n    def test_create_two_addresses_with_different_delivery(api_client):\n        \"\"\"Тест на создание двух адресов с одинаковыми данными, кроме street в delivery\"\"\"\n        authorize_client(api_client)\n    \n        # Создаём первый адрес\n        payload1 = create_address_payload()\n        response1 = api_client.post(\"/delivery/user_address\", json=payload1)\n        address_id_1 = response1[\"id\"]\n    \n        # Копируем payload1, но меняем только street\n        new_street = f\"Тестовая улица {random.randint(1, 600000)}\"\n        payload2 = payload1.copy()\n        payload2[\"delivery\"][\"cdek\"][\"address\"][\"street\"] = new_street\n    \n        response2 = api_client.post(\"/delivery/user_address\", json=payload2)\n        address_id_2 = response2[\"id\"]\n    \n        assert api_client.last_response.status_code == 200\n        assert address_id_1 != address_id_2\n>       assert_delivery_address_fields(response1)\n\napi_tests/tests/delivery/test_01_save_delivery_address.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_tests/utils/asserts.py:170: in assert_delivery_address_fields\n    assert_presence_of_all_fields(response, expected_fields, optional_fields)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'Iin': '990101300123', 'city_id': 23, 'city_name': 'Москва', 'comment': 'Позвоните за 69359 минут до доставки', ...}\nexpected_fields = ['country_id', 'delivery', 'email', 'id', 'name', 'phone', ...]\noptional_fields = ['region_id', 'region_name', 'city_name', 'city_id', 'comment', 'Iin']\n\n    def assert_presence_of_all_fields(response, expected_fields, optional_fields=[]):\n        if isinstance(response, str):  # Если response строка, парсим JSON\n            try:\n                response = json.loads(response)\n            except json.JSONDecodeError:\n                assert False, f\"Ответ не является валидным JSON: {response}\"\n        assert isinstance(response, dict), f\"Ожидался словарь, но получен {type(response)}: {response}\"\n        for field in expected_fields:\n>           assert field in response, f\"Поле {field} отсутствует в ответе\"\nE           AssertionError: Поле delivery_price отсутствует в ответе\n\napi_tests/utils/asserts.py:13: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1744368736264,"stop":1744368736264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"api_client::0","time":{"start":1744368750623,"stop":1744368750623,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"@pytest.mark.xfail(reason='https://ru.yougile.com/team/01c2a92f1328/#IT-628')"},{"name":"parentSuite","value":"tests.delivery"},{"name":"suite","value":"test_01_save_delivery_address"},{"name":"host","value":"fv-az1311-917"},{"name":"thread","value":"1826-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delivery.test_01_save_delivery_address"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='https://ru.yougile.com/team/01c2a92f1328/#IT-628')","smoke"]},"source":"ee5e2220dda5c5ed.json","parameterValues":[]}