{"uid":"d977e0f75ea7d137","name":"test_delete_delivery_address_invalid_id[abc-authorize_admin]","fullName":"tests.delivery.test_03_delete_delivery_address#test_delete_delivery_address_invalid_id","historyId":"0c9b0afa8bb7366e73036ed8c93c52c3","time":{"start":1744589629064,"stop":1744589629221,"duration":157},"description":"Негативные тесты: удаление адреса с некорректным ID","descriptionHtml":"<p>Негативные тесты: удаление адреса с некорректным ID</p>\n","status":"broken","statusMessage":"ValueError: Ошибка авторизации: {'status_code': 502, 'error': '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'}","statusTrace":"api_client = <api_tests.utils.api_client.APIClient object at 0x7f5d06596310>\nauthorize_func = <function authorize_admin at 0x7f5d06616520>\ninvalid_id = 'abc'\n\n    @pytest.mark.parametrize(\"authorize_func\", [authorize_client, authorize_partner, authorize_admin])\n    @pytest.mark.parametrize(\"invalid_id\", [\"abc\", None])\n    def test_delete_delivery_address_invalid_id(api_client, authorize_func, invalid_id):\n        \"\"\"Негативные тесты: удаление адреса с некорректным ID\"\"\"\n>       authorize_func(api_client)\n\napi_tests/tests/delivery/test_03_delete_delivery_address.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_tests/utils/auth.py:25: in authorize_admin\n    return authorize_user(api_client, settings.ADMIN_ACCESS_PARAMETER, settings.ADMIN_PASSWORD)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\napi_client = <api_tests.utils.api_client.APIClient object at 0x7f5d06596310>\naccess_parameter = 'Admin', password = '1c1c1c1c'\n\n    def authorize_user(api_client, access_parameter, password) -> Response:\n        \"\"\"Авторизация пользователя (клиента, партнера, админа).\"\"\"\n        response = api_client.post(\"/auth\", json={\"access_parameter\": access_parameter, \"password\": password})\n    \n        if \"access_token\" in response:\n            token = response[\"access_token\"][\"token\"]\n            api_client.set_auth_token(token)\n        else:\n>           raise ValueError(f\"Ошибка авторизации: {response}\")\nE           ValueError: Ошибка авторизации: {'status_code': 502, 'error': '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'}\n\napi_tests/utils/auth.py:12: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1744589625965,"stop":1744589625965,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"api_client::0","time":{"start":1744589630987,"stop":1744589630987,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.delivery"},{"name":"suite","value":"test_03_delete_delivery_address"},{"name":"host","value":"fv-az1477-977"},{"name":"thread","value":"1852-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delivery.test_03_delete_delivery_address"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"authorize_func","value":"<function authorize_admin at 0x7f5d06616520>"},{"name":"invalid_id","value":"'abc'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d977e0f75ea7d137.json","parameterValues":["<function authorize_admin at 0x7f5d06616520>","'abc'"]}