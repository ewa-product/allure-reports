{"uid":"86328a8ebd55742a","name":"test_delete_delivery_address_permissions[authorize_partner-authorize_partner-False]","fullName":"tests.delivery.test_03_delete_delivery_address#test_delete_delivery_address_permissions","historyId":"e69a460460355eba53fb1f771e305559","time":{"start":1744850116929,"stop":1744850117085,"duration":156},"description":"Тест: проверка прав доступа при удалении адресов","descriptionHtml":"<p>Тест: проверка прав доступа при удалении адресов</p>\n","status":"broken","statusMessage":"ValueError: Ошибка авторизации: {'status_code': 502, 'error': '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'}","statusTrace":"api_client = <api_tests.utils.api_client.APIClient object at 0x7f7b674e6c10>\ncreator = <function authorize_partner at 0x7f7b6757e520>\ndeleter = <function authorize_partner at 0x7f7b6757e520>, should_exist = False\n\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\n        \"creator, deleter, should_exist\",\n        [\n            (authorize_client, authorize_client, False),  # Клиент может удалить свой адрес\n            (authorize_partner, authorize_partner, False),  # Партнёр может удалить свой адрес\n            (authorize_admin, authorize_admin, False),  # Админ может удалить любой адрес\n            (authorize_client, authorize_admin, True),  # Админ не может удалить адрес клиента\n            (authorize_partner, authorize_admin, True),  # Админ не может удалить адрес партнёра\n            (authorize_client, authorize_partner, True),  # Партнёр не может удалить адрес клиента\n            (authorize_partner, authorize_client, True),  # Клиент не может удалить адрес партнёра\n        ],\n    )\n    def test_delete_delivery_address_permissions(api_client, creator, deleter, should_exist):\n        \"\"\"Тест: проверка прав доступа при удалении адресов\"\"\"\n    \n>       creator(api_client)\n\napi_tests/tests/delivery/test_03_delete_delivery_address.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_tests/utils/auth.py:20: in authorize_partner\n    return authorize_user(api_client, settings.PARTNER_ACCESS_PARAMETER, settings.PARTNER_PASSWORD)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\napi_client = <api_tests.utils.api_client.APIClient object at 0x7f7b674e6c10>\naccess_parameter = '0709', password = '123123'\n\n    def authorize_user(api_client, access_parameter, password) -> Response:\n        \"\"\"Авторизация пользователя (клиента, партнера, админа).\"\"\"\n        response = api_client.post(\"/auth\", json={\"access_parameter\": access_parameter, \"password\": password})\n    \n        if \"access_token\" in response:\n            token = response[\"access_token\"][\"token\"]\n            api_client.set_auth_token(token)\n        else:\n>           raise ValueError(f\"Ошибка авторизации: {response}\")\nE           ValueError: Ошибка авторизации: {'status_code': 502, 'error': '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'}\n\napi_tests/utils/auth.py:12: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1744850116433,"stop":1744850116433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"api_client::0","time":{"start":1744850122080,"stop":1744850122080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.delivery"},{"name":"suite","value":"test_03_delete_delivery_address"},{"name":"host","value":"fv-az1294-69"},{"name":"thread","value":"1824-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delivery.test_03_delete_delivery_address"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"creator","value":"<function authorize_partner at 0x7f7b6757e520>"},{"name":"deleter","value":"<function authorize_partner at 0x7f7b6757e520>"},{"name":"should_exist","value":"False"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"86328a8ebd55742a.json","parameterValues":["<function authorize_partner at 0x7f7b6757e520>","<function authorize_partner at 0x7f7b6757e520>","False"]}